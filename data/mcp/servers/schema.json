{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://example.com/schema.json",
  "title": "MCP Server Configuration Schema",
  "description": "Schema for MCP (Model Context Protocol) server configuration",
  "type": "object",
  "properties": {
    "servers": {
      "type": "array",
      "description": "List of MCP servers",
      "items": {
        "type": "object",
        "required": ["name", "description", "repository"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique name for the server",
            "minLength": 1,
            "maxLength": 50,
            "pattern": "^[a-zA-Z0-9_-]+$"
          },
          "description": {
            "type": "string",
            "description": "Description of the server",
            "minLength": 1,
            "maxLength": 500
          },
          "command": {
            "type": "string",
            "description": "Command to start the server",
            "enum": ["npx", "uvx"]
          },
          "args": {
            "type": "array",
            "description": "Arguments for the server",
            "items": {
              "type": "string"
            }
          },
          "env": {
            "type": "object",
            "description": "Environment variables such as API Key"
          },
          "url": {
            "type": "string",
            "description": "Remote mcp server url",
            "format": "uri"

          },
          "headers": {
            "type": "object",
            "description": "Request headers of remote mcp server"
          },
          "repository": {
            "type": "string",
            "description": "Code repository URL for the server",
            "format": "uri"
          }
        },
        "allOf": [
          {
            "if": {
              "required": ["command"]
            },
            "then": {
              "required": ["args"]
            }
          },
          {
            "if": {
              "required": ["url"]
            },
            "then": {
              "required": ["headers"]
            }
          }
        ],
        "additionalProperties": false
      }
    }
  },
  "required": ["servers"],
  "additionalProperties": false
}
